{"version":3,"sources":["services/helloService.js","pages/Provider.js"],"names":["stompClient","domain","Provider","state","connected","greetings","value","onChangeValue","e","_this","setState","target","onClickConnect","preventDefault","setConnected","showGreeting","socket","SockJS","Stomp","over","connect","frame","console","log","subscribe","greeting","JSON","parse","body","content","helloService","onClickDisconnect","disconnect","onClickSendName","messege","send","stringify","name","message","concat","_this$state","this","greetingList","map","index","react_default","a","createElement","key","className","htmlFor","id","disabled","onClick","type","placeholder","onChange","React","Component"],"mappings":"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","file":"static/js/2.ee497511.chunk.js","sourcesContent":["import SockJS from 'sockjs-client';\nimport Stomp from 'stompjs';\n\nvar stompClient = null;\nconst domain = 'https://api.usearch.me';\n\nfunction connect(setConnected, showGreeting) {\n    var socket = new SockJS(domain+'/websockethandler');\n    stompClient = Stomp.over(socket);\n    stompClient.connect({}, function (frame) {\n        setConnected(true);\n        console.log('Connected: ' + frame);\n\n        stompClient.subscribe('/topic/greetings', function (greeting) {\n            console.log('subscribe: ' + greeting);\n            showGreeting(JSON.parse(greeting.body).content);\n        });\n    });\n}\n\nfunction disconnect(setConnected) {\n    if (stompClient !== null) {\n        stompClient.disconnect();\n    }\n    setConnected(false);\n    console.log(\"Disconnected\");\n}\n\nfunction sendName(messege) {\n    stompClient.send(\"/app/hello\", {}, JSON.stringify({'name': messege}));\n}\n\nexport {\n    connect,\n    disconnect,\n    sendName\n}\n","import React from 'react';\nimport * as helloService from '../services/helloService'\n\nclass Provider extends React.Component {\n  state = {\n    connected: false,\n    greetings: [],\n    value: ''\n  }\n\n  onChangeValue = (e) => {\n    this.setState({\n      value: e.target.value\n    })\n  }\n\n  onClickConnect = (e) => {\n    e.preventDefault();\n    helloService.connect(this.setConnected, this.showGreeting);\n  }\n\n  onClickDisconnect = (e) => {\n    e.preventDefault();\n    helloService.disconnect(this.setConnected);\n  }\n\n  onClickSendName = (e) => {\n    e.preventDefault();\n    helloService.sendName(this.state.value);\n  }\n\n\n  setConnected = (connected) => {\n    this.setState({\n      connected: connected,\n      greetings: []\n    });\n  }\n\n  showGreeting = (message) => {\n    this.setState({\n      greetings: this.state.greetings.concat(message)\n    })\n  }\n\n\n  render() {\n    const {connected, greetings} = this.state;\n\n    const greetingList = greetings.map(\n      (greeting, index) => (\n        <tr key={index}>\n          <td>\n            {greeting}\n          </td>\n        </tr>\n      )\n    );\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-9 mx-auto\">\n            <h1 className=\"display-4\">WebSocket Chat</h1>\n            <p className=\"lead\">test test</p>\n          </div>\n        </div>\n\n        <div className=\"row\">\n            <div className=\"col-md-6\">\n                <form className=\"form-inline\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"connect\">WebSocket connection:</label>\n                        <button id=\"connect\" className=\"btn btn-default\" disabled={connected} onClick={this.onClickConnect}>Connect</button>\n                        <button id=\"disconnect\" className=\"btn btn-default\" disabled={!connected} onClick={this.onClickDisconnect}>Disconnect</button>\n                    </div>\n                </form>\n            </div>\n            <div className=\"col-md-6\">\n                <form className=\"form-inline\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\">What is your name?</label>\n                        <input type=\"text\" id=\"name\" className=\"form-control\" placeholder=\"Your name here...\" onChange={this.onChangeValue}/>\n                    </div>\n                    <button id=\"send\" className=\"btn btn-default\" type=\"submit\" onClick={this.onClickSendName}>Send</button>\n                </form>\n            </div>\n        </div>\n        <div className=\"row\">\n            <div className=\"col-md-12\">\n                <table id=\"conversation\" className=\"table table-striped\">\n                    <thead>\n                    <tr>\n                        <th>Greetings</th>\n                    </tr>\n                    </thead>\n                    <tbody id=\"greetings\">\n                      {greetingList}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n\n      </div>\n    );\n  }\n};\n\nexport default Provider;\n"],"sourceRoot":""}